{"id":"intercept.js","dependencies":[{"name":"/Users/xiaoweiba/workspace/codeblog/MyAxios/package.json","includedInParent":true,"mtime":1594019181000}],"generated":{"js":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Intercept = /*#__PURE__*/function () {\n  function Intercept() {\n    _classCallCheck(this, Intercept);\n\n    this.queue = [];\n  }\n\n  _createClass(Intercept, [{\n    key: \"use\",\n    value: function use(resolveHandle, rejectHandle) {\n      this.queue.push({\n        resolveHandle: resolveHandle,\n        rejectHandle: rejectHandle\n      });\n    }\n  }]);\n\n  return Intercept;\n}();"},"sourceMaps":{"js":{"mappings":[{"name":"Intercept","generated":{"line":7,"column":4},"source":"intercept.js","original":{"line":1,"column":6}},{"generated":{"line":8,"column":0},"source":"intercept.js","original":{"line":2,"column":2}},{"generated":{"line":8,"column":23},"source":"intercept.js","original":{"line":2,"column":16}},{"generated":{"line":9,"column":0},"source":"intercept.js","original":{"line":2,"column":16}},{"generated":{"line":11,"column":0},"source":"intercept.js","original":{"line":3,"column":4}},{"name":"queue","generated":{"line":11,"column":9},"source":"intercept.js","original":{"line":3,"column":9}},{"generated":{"line":11,"column":14},"source":"intercept.js","original":{"line":3,"column":4}},{"generated":{"line":11,"column":17},"source":"intercept.js","original":{"line":3,"column":17}},{"generated":{"line":11,"column":19},"source":"intercept.js","original":{"line":3,"column":4}},{"generated":{"line":12,"column":0},"source":"intercept.js","original":{"line":4,"column":3}},{"name":"resolveHandle","generated":{"line":16,"column":24},"source":"intercept.js","original":{"line":5,"column":6}},{"name":"rejectHandle","generated":{"line":16,"column":39},"source":"intercept.js","original":{"line":5,"column":21}},{"generated":{"line":16,"column":53},"source":"intercept.js","original":{"line":5,"column":35}},{"generated":{"line":17,"column":0},"source":"intercept.js","original":{"line":6,"column":4}},{"name":"queue","generated":{"line":17,"column":11},"source":"intercept.js","original":{"line":6,"column":9}},{"generated":{"line":17,"column":16},"source":"intercept.js","original":{"line":6,"column":4}},{"name":"push","generated":{"line":17,"column":17},"source":"intercept.js","original":{"line":6,"column":15}},{"generated":{"line":17,"column":21},"source":"intercept.js","original":{"line":6,"column":4}},{"generated":{"line":17,"column":22},"source":"intercept.js","original":{"line":6,"column":20}},{"name":"resolveHandle","generated":{"line":18,"column":0},"source":"intercept.js","original":{"line":7,"column":6}},{"name":"resolveHandle","generated":{"line":18,"column":8},"source":"intercept.js","original":{"line":7,"column":6}},{"generated":{"line":18,"column":21},"source":"intercept.js","original":{"line":7,"column":19}},{"name":"resolveHandle","generated":{"line":18,"column":23},"source":"intercept.js","original":{"line":7,"column":6}},{"generated":{"line":18,"column":36},"source":"intercept.js","original":{"line":6,"column":20}},{"name":"rejectHandle","generated":{"line":19,"column":0},"source":"intercept.js","original":{"line":8,"column":6}},{"name":"rejectHandle","generated":{"line":19,"column":8},"source":"intercept.js","original":{"line":8,"column":6}},{"generated":{"line":19,"column":20},"source":"intercept.js","original":{"line":8,"column":18}},{"name":"rejectHandle","generated":{"line":19,"column":22},"source":"intercept.js","original":{"line":8,"column":6}},{"generated":{"line":20,"column":0},"source":"intercept.js","original":{"line":6,"column":20}},{"generated":{"line":20,"column":7},"source":"intercept.js","original":{"line":6,"column":4}},{"generated":{"line":21,"column":0},"source":"intercept.js","original":{"line":10,"column":3}}],"sources":{"intercept.js":"class Intercept {\n  constructor() {\n    this.queue = []\n  }\n  use(resolveHandle, rejectHandle) {\n    this.queue.push({\n      resolveHandle,\n      rejectHandle\n    })\n  }\n}"},"lineCount":null}},"error":null,"hash":"739f77acf4e8047d08ff3059de348003","cacheData":{"env":{}}}